;; Object emacs-rails/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs-rails/"
  :tables (list 
   (semanticdb-table "rails.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("unless" code nil nil [1139 1360]) ("speedbar" include nil nil [1383 1402]) ("inf-ruby" include nil nil [1405 1424]) ("ruby-mode" include nil nil [1427 1447]) ("ruby-electric" include nil nil [1450 1474]) ("sql" include nil nil [1477 1491]) ("ansi-color" include nil nil [1492 1513]) ("etags" include nil nil [1514 1530]) ("find-recursive" include nil nil [1531 1556]) ("untabify-file" include nil nil [1558 1582]) ("predictive-prog-mode" include nil nil [1583 1614]) ("inflections" include nil nil [1616 1638]) ("rails-compat" include nil nil [1640 1663]) ("rails-project" include nil nil [1664 1688]) ("rails-core" include nil nil [1690 1711]) ("rails-ruby" include nil nil [1712 1733]) ("rails-lib" include nil nil [1734 1754]) ("rails-cmd-proxy" include nil nil [1756 1782]) ("rails-navigation" include nil nil [1783 1810]) ("rails-find" include nil nil [1811 1832]) ("rails-scripts" include nil nil [1833 1857]) ("rails-rake" include nil nil [1858 1879]) ("rails-test" include nil nil [1880 1901]) ("rails-ws" include nil nil [1902 1921]) ("rails-log" include nil nil [1922 1942]) ("rails-ui" include nil nil [1943 1962]) ("rails-model-layout" include nil nil [1963 1992]) ("rails-controller-layout" include nil nil [1993 2027]) ("rails-features" include nil nil [2028 2053]) ("defgroup" code nil nil [2099 2194]) ("rails-api-root" variable (:user-visible-flag t) nil [2196 2328]) ("rails-use-alternative-browse-url" variable nil nil [2330 2597]) ("rails-browse-api-with-w3m" variable nil nil [2599 2756]) ("rails-tags-command" variable (:default-value "ctags -e -a --Ruby-kinds=-f -o %s -R %s") nil [2758 2910]) ("rails-ri-command" variable (:default-value "ri") nil [2912 3020]) ("rails-always-use-text-menus" variable nil nil [3022 3142]) ("rails-ask-when-reload-tags" variable nil nil [3144 3293]) ("rails-chm-file" variable nil nil [3295 3412]) ("rails-ruby-command" variable (:default-value "ruby") nil [3414 3527]) ("rails-layout-template" variable (:default-value "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"
          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\"
      xml:lang=\"en\" lang=\"en\">
  <head>
    <title></title>
    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />
    <%= stylesheet_link_tag \"default\" %>
  </head>

  <body>
    <%= yield %>
  </body>
</html>") nil [3529 4054]) ("rails-version" variable (:default-value "0.5.99.1") nil [4056 4089]) ("rails-templates-list" variable (:default-value (quote ("erb" "rhtml" "rxml" "rjs" "haml" "liquid"))) nil [4090 4165]) ("rails-use-another-define-key" variable nil nil [4166 4207]) ("rails-primary-switch-func" variable nil nil [4208 4246]) ("rails-secondary-switch-func" variable nil nil [4247 4287]) ("rails-directory<-->types" variable (:default-value (quote ((:controller "app/controllers/") (:layout "app/layouts/") (:view "app/views/") (:observer "app/models/" (lambda (file) (rails-core:observer-p file))) (:mailer "app/models/" (lambda (file) (rails-core:mailer-p file))) (:model "app/models/" (lambda (file) (and (not (rails-core:mailer-p file)) (not (rails-core:observer-p file))))) (:helper "app/helpers/") (:plugin "vendor/plugins/") (:unit-test "test/unit/") (:functional-test "test/functional/") (:fixture "test/fixtures/") (:migration "db/migrate")))) nil [4289 5076]) ("rails-enviroments" variable (:default-value (quote ("development" "production" "test"))) nil [5078 5141]) ("rails-default-environment" variable (:default-value (first rails-enviroments)) nil [5142 5202]) ("rails-adapters-alist" variable (:default-value (quote (("mysql" . sql-mysql) ("postgresql" . sql-postgres) ("sqlite3" . sql-sqlite)))) nil [5204 5384]) ("rails-tags-dirs" variable (:default-value (quote ("app" "lib" "test" "db"))) nil [5386 5496]) ("rails-use-text-menu" function nil nil [5498 5629]) ("rails-svn-status-into-root" function nil nil [5650 5783]) ("rails-search-doc" function (:arguments ("&optional" "item")) nil [5812 6708]) ("rails-create-tags" function (:user-visible-flag t) nil [6710 7180]) ("rails-apply-for-buffer-type" function nil nil [7182 7798]) ("rails-db-conf" type (:members ("adapter" "host" "database" "username" "password") :type "struct") nil [7844 7909]) ("rails-db-parameters" function (:arguments ("env")) nil [7911 8518]) ("rails-database-emacs-func" function (:arguments ("adapter")) nil [8520 8720]) ("rails-read-enviroment-name" function (:arguments ("&optional" "default")) nil [8722 8913]) ("rails-run-sql" function (:user-visible-flag t :arguments ("&optional" "env")) nil [8915 9792]) ("rails-has-api-root" function nil nil [9794 11145]) ("rails-browse-api" function (:user-visible-flag t) nil [11147 11383]) ("rails-get-api-entries" function (:arguments ("name" "file" "sexp" "get-file-func")) nil [11385 12311]) ("rails-browse-api-class" function (:arguments ("class")) nil [12313 12656]) ("rails-browse-api-method" function (:arguments ("method")) nil [12658 13148]) ("rails-browse-api-at-point" function (:user-visible-flag t) nil [13150 13963]) ("define-minor-mode" code nil nil [13987 14267]) ("add-hook" code nil nil [14279 15318]) ("add-hook" code nil nil [15320 15426]) ("add-hook" code nil nil [15428 15811]) ("add-hook" code nil nil [15847 15971]) ("haml-mode" function (:prototype-flag t :user-visible-flag t) nil [15974 16012]) ("setq" code nil nil [16014 16088]) ("setq" code nil nil [16089 16163]) ("setq" code nil nil [16164 16238]) ("setq" code nil nil [16239 16313]) ("setq" code nil nil [16314 16388]) ("setq" code nil nil [16389 16463]) ("setq" code nil nil [16464 16538]) ("modify-coding-system-alist" code nil nil [16540 16594]) ("modify-coding-system-alist" code nil nil [16595 16649]) ("modify-coding-system-alist" code nil nil [16650 16703]) ("modify-coding-system-alist" code nil nil [16704 16779]) ("rails" package nil nil [16781 16797]))
    :file "rails.el"
    :pointmax 16798
    :unmatched-syntax 'nil
    )
   (semanticdb-table "rails-core.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("rails-lib" include nil nil [1173 1193]) ("rails-core:class-dirs" variable (:default-value (quote ("app/controllers" "app/views" "app/models" "app/helpers" "test/unit" "test/functional" "test/fixtures"))) nil [1196 1393]) ("rails-core:class-by-file" function (:arguments ("filename")) nil [1395 2150]) ("rails-core:file-by-class" function (:arguments ("classname" "&optional" "do-not-append-ext")) nil [2152 2720]) ("rails-core:file" function (:arguments ("file-name")) nil [2751 3003]) ("rails-core:quoted-file" function (:arguments ("file-name")) nil [3005 3164]) ("rails-core:find-file" function (:arguments ("file-name")) nil [3166 3335]) ("rails-core:find-file-if-exist" function (:arguments ("file-name")) nil [3337 3581]) ("rails-core:find-or-ask-to-create" function (:arguments ("question" "file")) nil [3583 3828]) ("rails-core:model-file" function (:arguments ("model-name")) nil [3882 4056]) ("rails-core:model-exist-p" function (:arguments ("model-name")) nil [4058 4371]) ("rails-core:controller-file" function (:arguments ("controller-name")) nil [4373 4740]) ("rails-core:controller-exist-p" function (:arguments ("controller-name")) nil [4742 4966]) ("rails-core:controller-file-by-model" function (:arguments ("model")) nil [4968 5188]) ("rails-core:observer-file" function (:arguments ("observer-name")) nil [5190 5374]) ("rails-core:mailer-file" function (:arguments ("mailer")) nil [5376 5514]) ("rails-core:mailer-exist-p" function (:arguments ("mailer")) nil [5516 5644]) ("rails-core:migration-file" function (:arguments ("migration-name")) nil [5646 6344]) ("rails-core:migration-file-by-model" function (:arguments ("model")) nil [6346 6518]) ("rails-core:model-by-migration-filename" function (:arguments ("migration-filename")) nil [6520 6847]) ("rails-core:plugin-file" function (:arguments ("plugin" "file")) nil [6849 6987]) ("rails-core:layout-file" function (:arguments ("layout")) nil [6989 7414]) ("rails-core:js-file" function (:arguments ("js")) nil [7416 7542]) ("rails-core:partial-name" function (:arguments ("name")) nil [7544 7843]) ("rails-core:view-name" function (:arguments ("name")) nil [7845 8009]) ("rails-core:helper-file" function (:arguments ("controller")) nil [8031 8460]) ("rails-core:functional-test-file" function (:arguments ("controller")) nil [8462 8740]) ("rails-core:unit-test-file" function (:arguments ("model")) nil [8742 8931]) ("rails-core:unit-test-exist-p" function (:arguments ("model")) nil [8933 9151]) ("rails-core:fixture-file" function (:arguments ("model")) nil [9153 9358]) ("rails-core:fixture-exist-p" function (:arguments ("model")) nil [9360 9492]) ("rails-core:views-dir" function (:arguments ("controller")) nil [9494 9718]) ("rails-core:stylesheet-name" function (:arguments ("name")) nil [9720 9861]) ("rails-core:controller-name" function (:arguments ("controller-file")) nil [9863 10354]) ("rails-core:short-controller-name" function (:arguments ("controller")) nil [10356 10488]) ("rails-core:long-controller-name" function (:arguments ("controller")) nil [10490 10692]) ("rails-core:observer-p" function (:arguments ("name")) nil [10767 10902]) ("rails-core:mailer-p" function (:arguments ("name")) nil [10904 11056]) ("rails-core:controllers" function (:arguments ("&optional" "cut-contoller-suffix")) nil [11058 11653]) ("rails-core:functional-tests" function nil nil [11655 11933]) ("rails-core:models" function nil nil [11935 12230]) ("rails-core:unit-tests" function nil nil [12232 12488]) ("rails-core:observers" function nil nil [12490 12772]) ("rails-core:mailers" function nil nil [12774 12972]) ("rails-core:helpers" function nil nil [12974 13283]) ("rails-core:migrations" function (:arguments ("&optional" "strip-numbers")) nil [13285 13823]) ("rails-core:migration-versions" function (:arguments ("&optional" "with-zero")) nil [13825 14208]) ("rails-core:plugins" function nil nil [14210 14425]) ("rails-core:plugin-files" function (:arguments ("plugin")) nil [14427 14606]) ("rails-core:layouts" function nil nil [14608 14851]) ("rails-core:fixtures" function nil nil [14853 15071]) ("rails-core:regex-for-match-view" function nil nil [15073 15307]) ("rails-core:get-view-files" function (:arguments ("controller-class" "&optional" "action")) nil [15309 15819]) ("rails-core:extract-ancestors" function (:arguments ("classes")) nil [15821 16118]) ("rails-core:models-ancestors" function nil nil [16120 16252]) ("rails-core:controllers-ancestors" function nil nil [16254 16401]) ("rails-core:current-controller" function nil nil [16479 17029]) ("rails-core:current-model" function nil nil [17031 17467]) ("rails-core:current-mailer" function nil nil [17469 17986]) ("rails-core:current-action" function nil nil [17988 18341]) ("rails-core:current-helper" function nil nil [18343 18443]) ("rails-core:current-plugin" function nil nil [18445 18647]) ("rails-core:current-method-name" function nil nil [18649 18816]) ("rails-core:buffer-file-match" function (:arguments ("regexp")) nil [18870 19120]) ("rails-core:buffer-type" function nil nil [19122 19508]) ("define-button-type" code nil nil [19559 19647]) ("rails-core:button-action" function (:arguments ("button")) nil [19649 20007]) ("rails-log-add" function (:arguments ("message")) nil [20055 20384]) ("rails-logged-shell-command" function (:arguments ("command" "buffer")) nil [20386 20715]) ("rails-core:menu-separator" function nil nil [20751 20843]) ("if" code nil nil [20845 21110]) ("rails-core:menu" function (:arguments ("menu")) nil [21112 21415]) ("rails-core:menu-letters-list" variable (:default-value (let ((res (quote nil))) (loop for i from (string-to-char "1") upto (string-to-char "9") do (add-to-list (quote res) (char-to-string i) t)) (loop for i from (string-to-char "a") upto (string-to-char "z") do (add-to-list (quote res) (char-to-string i) t)) res)) nil [21417 21758]) ("rails-core:prepare-menu" function (:arguments ("menu")) nil [21760 22693]) ("rails-core:erb-block-string" function nil nil [22723 23124]) ("rails-core:rhtml-buffer-p" function nil nil [23126 23266]) ("rails-core" package nil nil [23268 23289]))
    :file "rails-core.el"
    :pointmax 23290
    :unmatched-syntax 'nil
    )
   (semanticdb-table "rails-ui.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("rails-minor-mode-log-menu-bar-map" variable (:constant-flag t :default-value (let ((map (make-sparse-keymap))) (define-keys map ([test] (quote ("test.log" . rails-log:open-test))) ([pro] (quote ("production.log" . rails-log:open-production))) ([dev] (quote ("development.log" . rails-log:open-development))) ([separator] (quote ("---"))) ([open] (quote ("Open Log File..." . rails-log:open)))) map)) nil [1163 1567]) ("rails-minor-mode-config-menu-bar-map" variable (:constant-flag t :default-value (let ((map (make-sparse-keymap))) (define-keys map ([routes] (quote ("routes.rb" lambda nil (interactive) (rails-core:find-file "config/routes.rb")))) ([environment] (quote ("environment.rb" lambda nil (interactive) (rails-core:find-file "config/environment.rb")))) ([database] (quote ("database.yml" lambda nil (interactive) (rails-core:find-file "config/database.yml")))) ([boot] (quote ("boot.rb" lambda nil (interactive) (rails-core:find-file "config/boot.rb")))) ([env] (cons "environments" (make-sparse-keymap "environments"))) ([env test] (quote ("test.rb" lambda nil (interactive) (rails-core:find-file "config/environments/test.rb")))) ([env production] (quote ("production.rb" lambda nil (interactive) (rails-core:find-file "config/environments/production.rb")))) ([env development] (quote ("development.rb" lambda nil (interactive) (rails-core:find-file "config/environments/development.rb"))))) map)) nil [1569 2934]) ("rails-minor-mode-nav-menu-bar-map" variable (:constant-flag t :default-value (let ((map (make-sparse-keymap))) (define-keys map ([goto-fixtures] (quote ("Go to Fixtures" . rails-nav:goto-fixtures))) ([goto-plugins] (quote ("Go to Plugins" . rails-nav:goto-plugins))) ([goto-migrate] (quote ("Go to Migrations" . rails-nav:goto-migrate))) ([goto-layouts] (quote ("Go to Layouts" . rails-nav:goto-layouts))) ([goto-stylesheets] (quote ("Go to Stylesheets" . rails-nav:goto-stylesheets))) ([goto-javascripts] (quote ("Go to Javascripts" . rails-nav:goto-javascripts))) ([goto-helpers] (quote ("Go to Helpers" . rails-nav:goto-helpers))) ([goto-mailers] (quote ("Go to Mailers" . rails-nav:goto-mailers))) ([goto-observers] (quote ("Go to Observers" . rails-nav:goto-observers))) ([goto-unit-tests] (quote ("Go to Unit Tests" . rails-nav:goto-unit-tests))) ([goto-func-tests] (quote ("Go to Functional Tests" . rails-nav:goto-functional-tests))) ([goto-models] (quote ("Go to Models" . rails-nav:goto-models))) ([goto-controllers] (quote ("Go to Controllers" . rails-nav:goto-controllers)))) map)) nil [2936 4113]) ("rails-minor-mode-tests-menu-bar-map" variable (:constant-flag t :default-value (let ((map (make-sparse-keymap))) (define-keys map ([integration] (quote ("Integration Tests" lambda nil (interactive) (rails-test:run "integration")))) ([unit] (quote ("Unit Tests" lambda nil (interactive) (rails-test:run "units")))) ([functional] (quote ("Functional Tests" lambda nil (interactive) (rails-test:run "functionals")))) ([recent] (quote ("Recent Tests" lambda nil (interactive) (rails-test:run "recent")))) ([tests] (quote ("All" lambda nil (interactive) (rails-test:run "all")))) ([separator] (quote ("--"))) ([toggle] (quote (menu-item "Toggle Output Window" rails-script:toggle-output-window :enable (get-buffer rails-script:buffer-name)))) ([run-current] (quote ("Test Current Model/Controller/Mailer" . rails-test:run-current))) ([run] (quote ("Run Tests ..." . rails-test:run)))) map)) nil [4115 5095]) ("rails-minor-mode-db-menu-bar-map" variable (:constant-flag t :default-value (let ((map (make-sparse-keymap))) (define-keys map ([clone-db] (quote ("Clone Development DB to Test DB" lambda nil (interactive) (rails-rake:task "db:test:clone")))) ([load-schema] (quote ("Load schema.rb to DB" lambda nil (interactive) (rails-rake:task "db:schema:load")))) ([dump-schema] (quote ("Dump DB to schema.rb" lambda nil (interactive) (rails-rake:task "db:schema:dump")))) ([sep] (quote ("--"))) ([prev] (quote ("Migrate to Previous Version" . rails-rake:migrate-to-prev-version))) ([version] (quote ("Migrate to Version ..." . rails-rake:migrate-to-version))) ([migrate] (quote ("Migrate" . rails-rake:migrate)))) map)) nil [5097 5860]) ("define-keys" code nil nil [5862 11255]) ("rails-minor-mode-prefix-key" variable (:default-value "") nil [11257 11356]) ("rails-key" function (:arguments ("key")) nil [11358 11439]) ("rails-minor-mode-test-current-method-key" variable (:constant-flag t :default-value (rails-key " ,")) nil [11441 11513]) ("rails-minor-mode-map" variable (:default-value (let ((map (make-keymap))) map)) nil [11515 11582]) ("define-keys" code nil nil [11584 14786]) ("global-set-key" code nil nil [14816 14882]) ("when-bind" code nil nil [14884 15071]) ("rails-ui" package nil nil [15073 15092]))
    :file "rails-ui.el"
    :pointmax 15093
    )
   (semanticdb-table "rails-navigation.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("rails-nav:create-goto-menu" function (:arguments ("items" "title" "&optional" "append-to-menu")) nil [1154 1490]) ("rails-nav:goto-file-with-menu" function (:arguments ("dir" "title" "&optional" "ext" "no-inflector" "append-to-menu")) nil [1492 2300]) ("rails-nav:goto-file-with-menu-from-list" function (:arguments ("items" "title" "func" "&optional" "append-to-menu")) nil [2302 2587]) ("rails-nav:goto-controllers" function (:user-visible-flag t) nil [2589 2792]) ("rails-nav:goto-models" function (:user-visible-flag t) nil [2794 2972]) ("rails-nav:goto-functional-tests" function (:user-visible-flag t) nil [2974 3201]) ("rails-nav:goto-unit-tests" function (:user-visible-flag t) nil [3203 3406]) ("rails-nav:goto-observers" function (:user-visible-flag t) nil [3408 3601]) ("rails-nav:goto-mailers" function (:user-visible-flag t) nil [3603 3787]) ("rails-nav:goto-migrate" function (:user-visible-flag t) nil [3789 3982]) ("rails-nav:goto-helpers" function (:user-visible-flag t) nil [3984 4167]) ("rails-nav:goto-plugins" function (:user-visible-flag t) nil [4169 4396]) ("rails-nav:create-new-layout" function (:arguments ("&optional" "name")) nil [4398 4698]) ("rails-nav:goto-layouts" function (:user-visible-flag t) nil [4700 5098]) ("rails-nav:goto-fixtures" function (:user-visible-flag t) nil [5100 5288]) ("rails-nav:goto-stylesheets" function (:user-visible-flag t) nil [5290 5451]) ("rails-nav:goto-javascripts" function (:user-visible-flag t) nil [5453 5613]) ("defmacro*" code nil nil [5664 6428]) ("rails-goto-file-on-current-line" function (:user-visible-flag t :arguments ("prefix")) nil [6430 7531]) ("rails-on-current-line-gotos" variable (:default-value (quote (rails-line-->partial rails-line-->action rails-line-->controller+action rails-line-->layout rails-line-->stylesheet rails-line-->js))) nil [7533 7825]) ("def-goto-line" code nil nil [7827 8126]) ("def-goto-line" code nil nil [8128 8454]) ("def-goto-line" code nil nil [8456 8770]) ("def-goto-line" code nil nil [8772 9043]) ("def-goto-line" code nil nil [9045 9326]) ("rails-line-to-controller/action-keywords" variable (:default-value (quote ("render" "redirect_to" "link_to" "form_tag" "start_form_tag" "render_component" "form_remote_tag" "link_to_remote"))) nil [9328 9501]) ("rails-line-->controller+action" function (:arguments ("line" "prefix")) nil [9503 10138]) ("rails-navigation" package nil nil [10140 10167]))
    :file "rails-navigation.el"
    :pointmax 10168
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
